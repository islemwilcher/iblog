{"version":3,"sources":["constants/actiontype.js","reducers/posts.js","reducers/auth.js","reducers/index.js","App.js","index.js"],"names":["CREATE","UPDATE","DELETE","FETCH_ALL","FETCH_POST","AUTH","LOGOUT","postsReducer","state","isLoading","posts","action","type","payload","data","post","map","_id","filter","authReducer","authData","actionType","localStorage","setItem","JSON","stringify","loading","errors","clear","reducers","combineReducers","auth","App","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"sLAAaA,EAAS,SACTC,EAAS,SACTC,EAAS,SACTC,EAAY,YACZC,EAAa,aAKbC,EAAO,OACPC,EAAS,SCgBPC,EAxBM,WAAqD,IAApDC,EAAmD,uDAA3C,CAAEC,WAAW,EAAMC,MAAO,IAAMC,EAAW,uCACvE,OAAQA,EAAOC,MACb,IAAK,gBACH,OAAO,2BAAKJ,GAAZ,IAAmBC,WAAW,IAChC,IAAK,cACH,OAAO,2BAAKD,GAAZ,IAAmBC,WAAW,IAChC,KAAKN,EACH,OAAO,2BACFK,GADL,IAEEE,MAAOC,EAAOE,QAAQC,OAE1B,KAAKV,EACH,OAAO,2BAAKI,GAAZ,IAAmBO,KAAMJ,EAAOE,QAAQE,OAC1C,KAAKf,EACH,OAAO,2BAAKQ,GAAZ,IAAmBE,MAAM,GAAD,mBAAMF,EAAME,OAAZ,CAAmBC,EAAOE,YACpD,KAAKZ,EACH,OAAO,2BAAKO,GAAZ,IAAmBE,MAAOF,EAAME,MAAMM,KAAI,SAACD,GAAD,OAAWA,EAAKE,MAAQN,EAAOE,QAAQI,IAAMN,EAAOE,QAAUE,OAC1G,KAAKb,EACH,OAAO,2BAAKM,GAAZ,IAAmBE,MAAOF,EAAME,MAAMQ,QAAO,SAACH,GAAD,OAAUA,EAAKE,MAAQN,EAAOE,aAC7E,QACE,OAAOL,ICLEW,EAfK,WAAyC,IAAxCX,EAAuC,uDAA/B,CAAEY,SAAU,MAAQT,EAAW,uCAC1D,OAAQA,EAAOC,MACb,KAAKS,EAGH,OAFAC,aAAaC,QAAQ,UAAWC,KAAKC,UAAL,sBAAoBd,QAApB,IAAoBA,OAApB,EAAoBA,EAAQG,QAErD,2BAAKN,GAAZ,IAAmBY,SAAUT,EAAOG,KAAMY,SAAS,EAAOC,OAAQ,OACpE,KAAKN,EAGH,OAFAC,aAAaM,QAEN,2BAAKpB,GAAZ,IAAmBY,SAAU,KAAMM,SAAS,EAAOC,OAAQ,OAC7D,QACE,OAAOnB,ICRAqB,EAAWC,YAAgB,CAAEpB,QAAOqB,S,OCKlCC,EARH,WACR,OACI,8BACI,0CCKNC,G,MAAQC,YAAYL,EAAU,GAAIM,YAAQC,YAAgBC,QAEhEC,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFO,SAASC,eAAe,W","file":"static/js/main.84257bbe.chunk.js","sourcesContent":["export const CREATE = 'CREATE';\r\nexport const UPDATE = 'UPDATE';\r\nexport const DELETE = 'DELETE';\r\nexport const FETCH_ALL = 'FETCH_ALL';\r\nexport const FETCH_POST = 'FETCH_POST';\r\n\r\nexport const END_LOADING = 'END_LOADING';\r\nexport const START_LOADING = 'START_LOADING';\r\n\r\nexport const AUTH = 'AUTH';\r\nexport const LOGOUT = 'LOGOUT';","import { FETCH_ALL, FETCH_POST, CREATE, UPDATE, DELETE } from '../constants/actiontype';\r\n\r\nconst postsReducer = (state = { isLoading: true, posts: [] }, action) => {\r\n  switch (action.type) {\r\n    case 'START_LOADING':\r\n      return { ...state, isLoading: true };\r\n    case 'END_LOADING':\r\n      return { ...state, isLoading: false };\r\n    case FETCH_ALL:\r\n      return {\r\n        ...state,\r\n        posts: action.payload.data,\r\n      };\r\n    case FETCH_POST:\r\n      return { ...state, post: action.payload.post };\r\n    case CREATE:\r\n      return { ...state, posts: [...state.posts, action.payload] };\r\n    case UPDATE:\r\n      return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post)) };\r\n    case DELETE:\r\n      return { ...state, posts: state.posts.filter((post) => post._id !== action.payload) };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default postsReducer;","import * as actionType from '../constants/actiontype';\r\n\r\nconst authReducer = (state = { authData: null }, action) => {\r\n  switch (action.type) {\r\n    case actionType.AUTH:\r\n      localStorage.setItem('profile', JSON.stringify({ ...action?.data }));\r\n\r\n      return { ...state, authData: action.data, loading: false, errors: null };\r\n    case actionType.LOGOUT:\r\n      localStorage.clear();\r\n\r\n      return { ...state, authData: null, loading: false, errors: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;","import { combineReducers } from 'redux';\r\n\r\nimport posts from './posts';\r\nimport auth from './auth';\r\n\r\nexport const reducers = combineReducers({ posts, auth });","import React from 'react'\r\n\r\nconst App = () => {\r\n    return (\r\n        <div>\r\n            <h2>About</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { reducers } from './reducers';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nconst store = createStore(reducers, {}, compose(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);"],"sourceRoot":""}